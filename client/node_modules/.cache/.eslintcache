[{"C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\index.js":"1","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\App.js":"2","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\reportWebVitals.js":"3","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\firebaseConfig.js":"4","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\routes.js":"5","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\Header.js":"6","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\Incentives.js":"7","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\NavBar.js":"8","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\Timeline.js":"9","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\Projects.js":"10","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\Data.js":"11","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\NotificationBar.js":"12","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\Drawer.js":"13","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\PomSession.js":"14","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\Login.js":"15"},{"size":145,"mtime":1613294568184,"results":"16","hashOfConfig":"17"},{"size":7831,"mtime":1613294501581,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":341,"mtime":1613256124331,"results":"20","hashOfConfig":"17"},{"size":363,"mtime":1613270577533,"results":"21","hashOfConfig":"17"},{"size":315,"mtime":1613270212968,"results":"22","hashOfConfig":"17"},{"size":6413,"mtime":1613293436797,"results":"23","hashOfConfig":"17"},{"size":1117,"mtime":1613276438135,"results":"24","hashOfConfig":"17"},{"size":2624,"mtime":1613284927440,"results":"25","hashOfConfig":"17"},{"size":7781,"mtime":1613293436037,"results":"26","hashOfConfig":"17"},{"size":678,"mtime":1613276559039,"results":"27","hashOfConfig":"17"},{"size":1147,"mtime":1613276482143,"results":"28","hashOfConfig":"17"},{"size":1644,"mtime":1613276406151,"results":"29","hashOfConfig":"17"},{"size":3755,"mtime":1613276498779,"results":"30","hashOfConfig":"17"},{"size":1667,"mtime":1613295168979,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1hgzjqt",{"filePath":"35","messages":"36","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"34"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\index.js",[],["72","73"],"C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\App.js",["74","75","76","77"],"/*import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport config from \"./firebaseConfig\";\nimport 'firebase/auth';\nimport firebase from 'firebase/app';\nimport './App.css';\nimport withFirebaseAuth from 'react-with-firebase-auth'\nimport 'firebase/firestore';\n\n//title \n//desc\n//progress\n//priority\n//var firebaseApp;\n\nvar firebaseApp;\nif (!firebase.apps.length) {\n   firebaseApp = firebase.initializeApp(config);\n}\nelse {\n   firebaseApp = firebase.app(); \n}\n//const Auth = useContext(AuthContext);\nconst firestore = firebase.firestore();\nconst firebaseAppAuth = firebaseApp.auth();\n\nconst providers = {\n  googleProvider: new firebase.auth.GoogleAuthProvider()\n};\n\nclass App extends React.Component {\n  \n  state = {\n    uid: \"\",\n\t\ttitle: \"\",\n    desc: \"\",\n    priority: \"\",\n    progress: \"\"\n\t};\n\n  updateInput = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n//add a task to the database\naddTask = event => {\n\tevent.preventDefault()\n\tfirestore.collection(\"tasks\").add({\n\t\ttitle: this.state.title,\n    desc: this.state.desc,\n    priority: this.state.priority,\n    uid: this.state.uid\n\t})\n\tthis.setState({ title: \"\", desc: \"\", priority: \"\"})\n  console.log('added');\n}\n\n//get all tasks from database (from all users) and print to console\ngetTasks = event => {\n  event.preventDefault();\n  firestore.collection(\"tasks\").get().then((querySnapshot) => {\n    querySnapshot.forEach((doc) => {\n      console.log(doc.data().title + doc.data().uid);\n    });\n  });\n}\n\n//Delete task from database by title\ndeleteTask = event => {\n  event.preventDefault();\n  var tasktodelete = firestore.collection('tasks').where('title','==',this.state.title).where('uid', '==', this.state.uid);\n  tasktodelete.get().then(function(querySnapshot) {\n    querySnapshot.forEach(function(doc) {\n      doc.ref.delete();\n    });\n  });\n}\n\n//add a task to the database\naddProject = event => {\n\tevent.preventDefault()\n\tfirestore.collection(\"projects\").add({\n\t\ttitle: this.state.title,\n    desc: this.state.desc,\n    priority: this.state.priority,\n    uid: this.state.uid\n\t})\n\tthis.setState({ title: \"\", desc: \"\", priority: \"\"})\n  console.log('added');\n}\n\n//get all tasks from database (from all users) and print to console\ngetProjects = event => {\n  event.preventDefault();\n  firestore.collection(\"projects\").get().where('uid', '==', this.state.uid).then((querySnapshot) => {\n    querySnapshot.forEach((doc) => {\n      console.log(doc.data().title + doc.data().uid);\n    })\n  })\n}\n\n//Delete project from database by title\n/*deleteProject = event => {\n  event.preventDefault();\n  var tasktodelete = firestore.collection('projects').where('title','==',this.state.title).where('uid', '==', this.state.uid);\n  tasktodelete.get().then(function(querySnapshot) {\n    querySnapshot.forEach(function(doc) {\n      doc.ref.delete();\n    });\n  });\n}\n\n\ndeleteProject = (name) => (e) => {\n  e.preventDefault();\n  var tasktodelete = firestore.collection('projects').where('title', '==', name).where('uid', '==', this.state.uid);\n  tasktodelete.get().then(function(querySnapshot) {\n    querySnapshot.forEach(function(doc) {\n      doc.ref.delete();\n    });\n  });\n}\n\nrender() {\n  if (firebase.auth().currentUser) {\n    let id = firebase.auth().currentUser.uid;\n    this.state.uid = id;\n  }\n  const { title, desc, priority } = this.state\n  \n  const {\n    user,\n    signOut,\n    signInWithGoogle,\n  } = this.props;\n  return (\n    <div className='App'>\n      <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {\n            user\n              ? <p>Hello, {user.displayName}</p>\n              : <p>Please sign in.</p>\n          }\n          \n          {\n            user\n              ? <button onClick={signOut}>Sign out</button>\n              : <button onClick={signInWithGoogle}>Sign in with Google</button>\n          }\n        </header>\n        <div className='createTask'>\n              <p> Create a new task!</p>\n              <form onSubmit={this.addTask}>\n                <input\n                    type='text'\n                    placeholder='title'\n                    name='title'\n                    onChange={this.updateInput}\n                    value={title}\n                />\n                <input\n                  type='text'\n                  placeholder='description'\n                  name='desc'\n                  onChange={this.updateInput}\n                  value={desc}\n                />\n                <input \n                  type='text'\n                  placeholder='priority'\n                  name='priority'\n                  onChange={this.updateInput}\n                  value={priority}\n                />\n                <br/>\n                <button type='submit'>Add Task</button>\n              </form>\n              <form onSubmit={this.deleteTask}>\n                <button type='submit'>Delete Task</button>\n              </form>\n              <form onSubmit={this.getTasks}>\n                <button type='submit'>Get Tasks from database</button>\n              </form>\n        </div>\n        <div className='createProject'>\n              <p>Create a New Project</p>\n              <form onSubmit={this.addProject}>\n                <input\n                    type='text'\n                    placeholder='title'\n                    name='title'\n                    onChange={this.updateInput}\n                    value={title}\n                />\n                <input\n                  type='text'\n                  placeholder='description'\n                  name='desc'\n                  onChange={this.updateInput}\n                  value={desc}\n                />\n                <input \n                  type='text'\n                  placeholder='priority'\n                  name='priority'\n                  onChange={this.updateInput}\n                  value={priority}\n                />\n                <br/>\n                <button type='submit'>Add Project</button>\n              </form>\n              <form onSubmit={this.addProject}>\n                <button type='submit'>Delete Project</button>\n              </form>\n\n              <button onClick={ this.deleteProject(\"pog\") }>press me</button>\n              <form onSubmit={this.getProjects}>\n                <button type='submit'>Get Projects from Database</button>\n              </form>\n        </div>\n      </div>\n  )\n  }\n  \n}\n\nexport default withFirebaseAuth({\n  providers,\n  firebaseAppAuth,\n})(App);  */\n\nimport { ChakraProvider, SimpleGrid, Box } from \"@chakra-ui/react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Timeline from \"./components/Timeline\";\nimport Incentives from \"./components/Incentives\";\nimport Projects from \"./components/Projects\";\nimport config from \"./firebaseConfig\";\nimport 'firebase/auth';\nimport firebase from 'firebase/app';\nimport './App.css';\nimport 'firebase/firestore';\nimport Login from \"./components/Login\";\nimport React from 'react';\nimport withFirebaseAuth from './components/Login';\n\n\n\nexport function Main() {\n  return (\n    <>\n      {\" \"}\n      <Router>\n        <NavBar />\n        <Switch>\n          <Route path=\"/Login\" exact>\n            <Login />\n          </Route>\n          <Route path=\"/\" exact>\n            <SimpleGrid columns={2} spacing={10}>\n              <Box>\n                {\" \"}\n                <Timeline />\n              </Box>\n              <Box> </Box>\n            </SimpleGrid>\n          </Route>\n          <Route path=\"/incentives\" exact>\n            <Incentives />\n          </Route>\n          <Route path=\"/projects\" exact>\n            <Projects />\n          </Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default function App() {\n\n  \n  return (\n    <ChakraProvider>\n      <Main />\n    </ChakraProvider>\n  );\n}","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\reportWebVitals.js",[],["78","79"],"C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\firebaseConfig.js",[],"C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\routes.js",[],"C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\Header.js",[],"C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\Incentives.js",["80","81","82","83","84","85","86"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  SimpleGrid,\r\n  Box,\r\n  Progress,\r\n  Stack,\r\n  Heading,\r\n  Text,\r\n  IconButton,\r\n  Button,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n} from \"@chakra-ui/react\";\r\nimport { DeleteIcon, AddIcon, EditIcon } from \"@chakra-ui/icons\";\r\nimport { incentive } from \"../Data\"; // data\r\nimport 'firebase/firestore';\r\nimport firebase from 'firebase';\r\nimport config from \"../firebaseConfig\";\r\nimport Data from \"../Data\";\r\nvar firebaseApp;\r\nif (!firebase.apps.length) {\r\n    firebaseApp = firebase.initializeApp(config);\r\n}\r\nelse {\r\n    firebaseApp = firebase.app(); \r\n}\r\n\r\n//import firestore from './Login';\r\nconst firestore = firebase.firestore();\r\n\r\nvar incentivelist = [];\r\n\r\nexport default () => {\r\n\r\n\r\n  let [incentives, setIncentives] = React.useState(Data); // data in state\r\n  incentivelist = [];\r\n\r\n  const fetchIncentives = async() => {\r\n    const response = firestore.collection('projects');\r\n    const data = await response.get();\r\n    data.docs.forEach(item => {\r\n        incentivelist.push({\r\n            title: item.data().title,\r\n            desc: item.data().desc,\r\n            priority: item.data().priority,\r\n            progress: item.data().progress,\r\n            uid: item.data().uid\r\n          })\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        fetchIncentives();\r\n    }, []);\r\n\r\n\r\n\r\n  return (\r\n    <SimpleGrid columns={2} spacing={10}>\r\n      <Box></Box>\r\n      <Box>\r\n        <Stack spacing={2}>\r\n          {incentives.map((item) => (\r\n            <IncentiveItem\r\n              title={item.name}\r\n              desc={item.desc}\r\n              incentives={incentives}\r\n              setIncentives={setIncentives}\r\n            />\r\n          ))}\r\n        </Stack>\r\n        <AddButton />\r\n      </Box>\r\n    </SimpleGrid>\r\n  );\r\n};\r\n\r\nfunction IncentiveItem({ title, desc, incentives, setIncentives, ...rest }) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const onClose = () => setIsOpen(false);\r\n  const cancelRef = React.useRef();\r\n  return (\r\n    <Box p={5} shadow=\"md\" borderWidth=\"1px\" {...rest}>\r\n      <Heading fontSize=\"xl\">\r\n        {title}{\" \"}\r\n        <IconButton aria-label=\"Search database\" icon={<EditIcon />} m={2} />\r\n        <IconButton\r\n          aria-label=\"Search database\"\r\n          icon={<DeleteIcon />}\r\n          m={2}\r\n          onClick={() => setIsOpen(true)}\r\n        />\r\n        <AlertDialog\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={onClose}\r\n        >\r\n          <AlertDialogOverlay>\r\n            <AlertDialogContent>\r\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                Delete Project\r\n              </AlertDialogHeader>\r\n\r\n              <AlertDialogBody>\r\n                Are you sure? You can't undo this action afterwards.\r\n              </AlertDialogBody>\r\n\r\n              <AlertDialogFooter>\r\n                <Button ref={cancelRef} onClick={onClose}>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  colorScheme=\"red\"\r\n                  onClick={() => {\r\n                    const filteredPeople = incentives.filter(\r\n                      (item) => item.name !== title\r\n                    );\r\n                    var name;\r\n                    setIncentives(filteredPeople);\r\n                    //TODO: \r\n                    //Find how to get selected item name\r\n                  //  DeleteIncentive(item name)\r\n                    onClose();\r\n                  }}\r\n                  ml={3}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </AlertDialogFooter>\r\n            </AlertDialogContent>\r\n          </AlertDialogOverlay>\r\n        </AlertDialog>\r\n      </Heading>\r\n\r\n      <Text mt={4}>{desc}</Text>\r\n      <br />\r\n      <Progress colorScheme={\"green\"} height=\"32px\" value={20} />\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction DeleteIncentive(name) {\r\n    const del = () => {\r\n        const response = firestore.collection('incentives');\r\n        const data =  response.where('name', '==', name);\r\n        data.get().then(function(querySnapshot) {\r\n          querySnapshot.forEach(function(doc) {\r\n            doc.ref.delete();\r\n          });\r\n        });\r\n    }\r\n    del();\r\n}\r\n\r\n\r\nclass AddButton extends React.Component {\r\n    \r\n    state = {\r\n        name:\"\",\r\n        desc:\"\",\r\n        uid:\"\"\r\n    };\r\n\r\n    updateInput = event => {\r\n        this.setState({ [event.target.name]: event.target.value} )\r\n    }\r\n\r\n    addIncentive = event => {\r\n        event.preventDefault()\r\n        firestore.collection(\"incentives\").add({\r\n            name: this.state.name,\r\n            desc: this.state.desc,\r\n            uid: this.state.uid\r\n            \r\n        })\r\n        this.setState({ name: \"\", desc: \"\"})\r\n        console.log('added');\r\n    }\r\n\r\n    //get all tasks from database (from all users) and print to console\r\n    getIncentives = event => {\r\n        event.preventDefault();\r\n        incentivelist = [];\r\n        firestore.collection(\"incentives\").get().then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                incentivelist.push({name: doc.data().name, desc: doc.data().desc})\r\n            //   console.log(doc.data().title + doc.data().uid);\r\n            });\r\n        });\r\n        console.log(incentivelist);\r\n    }\r\n\r\n    render() {\r\n\r\n        if (firebase.auth().currentUser) {\r\n            let id = firebase.auth().currentUser.uid;\r\n            this.state.uid = id;\r\n        }\r\n        const {\r\n            name, desc, uid\r\n        } = this.state;\r\n        return (\r\n            <div>\r\n            <form onSubmit={this.addIncentive}>\r\n              <input\r\n                type='text'\r\n                placeholder='name of incentive'\r\n                name='name'\r\n                onChange={this.updateInput}\r\n                value={name}\r\n               />\r\n              <input\r\n                type='text'\r\n                placeholder='incentive description'\r\n                name='desc'\r\n                onChange={this.updateInput}\r\n                value={desc}\r\n               />\r\n              \r\n              {\" \"}\r\n              <IconButton m={2} p={2} arias-label=\"Search database\" icon={<AddIcon />} type=\"submit\"/>\r\n            </form>\r\n            </div>\r\n          );\r\n        }\r\n    \r\n}\r\n  ","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\NavBar.js",["87"],"import {\r\n    IconButton,\r\n    Flex,\r\n    Heading,\r\n    Spacer,\r\n    Box,\r\n    Input,\r\n  } from \"@chakra-ui/react\";\r\n  import { SearchIcon, EmailIcon, SettingsIcon } from \"@chakra-ui/icons\";\r\n  \r\n  import Drawer from \"./Drawer\";\r\n  import NotificationBar from \"./NotificationBar\";\r\n  export default () => {\r\n    return (\r\n      <>\r\n        <Flex>\r\n          <Box p=\"2\">\r\n            <Drawer />\r\n          </Box>\r\n          <Box p=\"2\">\r\n            <Heading m={2} size=\"md\">\r\n              App\r\n            </Heading>\r\n          </Box>\r\n          <Spacer />\r\n          <Box>\r\n            {\" \"}\r\n            <Input placeholder=\"Basic usage\" size=\"md\" width=\"400px\" m={2} />{\" \"}\r\n          </Box>\r\n          <IconButton aria-label=\"Search database\" icon={<SearchIcon />} m={2} />{\" \"}\r\n          <Spacer />\r\n          <NotificationBar />\r\n          <IconButton aria-label=\"Search database\" icon={<EmailIcon />} m={2} />\r\n          <IconButton\r\n            aria-label=\"Search database\"\r\n            icon={<SettingsIcon />}\r\n            m={2}\r\n          />\r\n        </Flex>\r\n        <Flex></Flex>\r\n      </>\r\n    );\r\n  };","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\Timeline.js",["88","89"],"import React from \"react\";\r\n\r\nimport { Grid, Heading } from \"@chakra-ui/react\";\r\n\r\nimport {\r\n  Box,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  HStack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { StarIcon } from \"@chakra-ui/icons\";\r\n\r\nimport Data from \"../Data\";\r\nimport PomSession from \"./PomSession\";\r\n\r\nexport default () => {\r\n  let [preview, setPreview] = React.useState(false);\r\n  let [previewTag, setPreviewTag] = React.useState(null);\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <Heading size=\"sm\" fontSize=\"50px\" m={2} p={2}>\r\n        Timeline\r\n      </Heading>{\" \"}\r\n      <br />\r\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={700} m={2} p={2}>\r\n        <Grid templateColumns=\"repeat(1, 1fr)\" gap={4} m={2} p={2}>\r\n          {Data.map((item) => {\r\n            return (\r\n              <PomPrompt\r\n                title={item.title}\r\n                desc={item.desc}\r\n                progress={item.progress}\r\n                priority={item.priority}\r\n                setPreview={setPreview}\r\n                setPreviewTag={setPreviewTag}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n        {preview ? previewTag : null}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nfunction PomPrompt(props) {\r\n  let [prev, setPrev] = React.useState(true);\r\n  const handleClick = () => {\r\n    props.setPreviewTag(<PomSession lol={props.title} />);\r\n    props.setPreview(prev);\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n        w=\"300px\"\r\n        border=\"1px\"\r\n        borderColor=\"gray.200\"\r\n        borderRadius=\"lg\"\r\n        p={2}\r\n        onClick={handleClick}\r\n      >\r\n        <Box>\r\n          <Text fontSize=\"2xl\">{props.title}</Text>\r\n          <Box>\r\n            {Array(5)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < props.priority ? \"teal.500\" : \"gray.300\"}\r\n                />\r\n              ))}{\" \"}\r\n          </Box>\r\n        </Box>{\" \"}\r\n        <HStack spacing={20}>\r\n          <Box>\r\n            {\" \"}\r\n            <Stat>\r\n              {\" \"}\r\n              <HStack spacing={20}>\r\n                <Box>\r\n                  <StatLabel>Hours Done</StatLabel>\r\n                  <StatNumber>9.00</StatNumber>{\" \"}\r\n                </Box>{\" \"}\r\n                <Box>\r\n                  <StatLabel>Hours Left</StatLabel>\r\n                  <StatNumber>9.00</StatNumber>{\" \"}\r\n                </Box>{\" \"}\r\n              </HStack>{\" \"}\r\n              <StatHelpText>Feb 12 - Feb 28</StatHelpText>\r\n            </Stat>\r\n          </Box>{\" \"}\r\n        </HStack>{\" \"}\r\n      </Box>{\" \"}\r\n    </>\r\n  );\r\n}","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\Projects.js",["90","91","92","93","94","95","96","97","98"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  Box,\r\n  Heading,\r\n  IconButton,\r\n  Text,\r\n  Progress,\r\n  Container,\r\n  Spacer,\r\n  Button,\r\n  Grid,\r\n} from \"@chakra-ui/react\";\r\nimport { DeleteIcon, EditIcon, StarIcon, AddIcon } from \"@chakra-ui/icons\";\r\nimport Data from \"../Data\";\r\nimport 'firebase/firestore';\r\nimport firebase from 'firebase';\r\nimport config from \"../firebaseConfig\";\r\nvar firebaseApp;\r\nif (!firebase.apps.length) {\r\n    firebaseApp = firebase.initializeApp(config);\r\n}\r\nelse {\r\n    firebaseApp = firebase.app(); \r\n}\r\nconst firestore = firebase.firestore();\r\n\r\nvar projectlist = [];\r\n\r\n\r\nvar id;\r\nif (firebase.auth().currentUser) {\r\n    var id = firebase.auth().currentUser.uid;\r\n}\r\n\r\n\r\nfunction Project({\r\n  title,\r\n  desc,\r\n  progress,\r\n  priority,\r\n  setPreview,\r\n  setPreviewTag,\r\n  dataArray,\r\n  setDataArray,\r\n  ...rest\r\n}) {\r\n  let [prev, setPrev] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setPreviewTag(\r\n      <Preview\r\n        title={title}\r\n        desc={desc}\r\n        progress={progress}\r\n        priority={priority}\r\n        dataArray={dataArray}\r\n        setDataArray={setDataArray}\r\n      />\r\n    );\r\n    setPreview(prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box onClick={handleClick} p={5} shadow=\"md\" borderWidth=\"1px\" {...rest}>\r\n        <Heading fontSize=\"xl\">\r\n          {title} <Spacer />{\" \"}\r\n        </Heading>\r\n\r\n        <Text mt={4}>{desc}</Text>\r\n        <br />\r\n        <Progress colorScheme={\"green\"} height=\"32px\" value={progress} />\r\n      </Box>{\" \"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default () => {\r\n  let [dataArray, setDataArray] = React.useState(Data);\r\n  //empty project list\r\n  projectlist = [];\r\n\r\n  //load projects from database\r\n  const fetchProjects = async() => {\r\n      const response = firestore.collection('projects');\r\n      const data = await response.get();\r\n      data.docs.forEach(item => {\r\n          projectlist.push({\r\n              title: item.data().title,\r\n              desc: item.data().desc,\r\n              priority: item.data().priority,\r\n              progress: item.data().progress,\r\n              uid: item.data().uid\r\n            })\r\n      })\r\n  }\r\n  useEffect(() => {\r\n      fetchProjects();\r\n  }, []);\r\n\r\n  let [preview, setPreview] = React.useState(false);\r\n  let [previewTag, setPreviewTag] = React.useState(null);\r\n  return (\r\n    <>\r\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={4}>\r\n        {\" \"}\r\n        <Container>\r\n          {\" \"}\r\n          {dataArray.map((item) => {\r\n            return (\r\n              <Project\r\n                title={item.title}\r\n                desc={item.desc}\r\n                progress={item.progress}\r\n                priority={item.priority}\r\n                setPreview={setPreview}\r\n                setPreviewTag={setPreviewTag}\r\n                dataArray={dataArray}\r\n                setDataArray={setDataArray}\r\n              />\r\n            );\r\n          })}\r\n          \r\n          <AddButton />\r\n\r\n        </Container>\r\n        <Container> {preview ? previewTag : null} </Container>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nclass AddButton extends React.Component {\r\n\r\n    state = {\r\n        title: \"\",\r\n        desc: \"\",\r\n        progress:\"0\",\r\n        priority:\"\",\r\n        uid:\"\"\r\n    };\r\n\r\n    updateInput = event => {\r\n        this.setState({ [event.target.name]: event.target.value} )\r\n    }\r\n\r\n    addProject = event => {\r\n        event.preventDefault()\r\n        firestore.collection(\"projects\").add({\r\n            title: this.state.title,\r\n            desc: this.state.desc,\r\n            progress: 0,\r\n            priority: this.state.priority,\r\n            uid: this.state.uid\r\n        })\r\n        this.setState({title: \"\", desc: \"\", priority:\"\"})\r\n        console.log('added');\r\n    }\r\n    \r\n    render() {\r\n        if (firebase.auth().currentUser) {\r\n            let id = firebase.auth().currentUser.uid;\r\n            this.state.uid = id;\r\n        }\r\n        const {\r\n            title, desc, progress, priority, uid\r\n        } = this.state;\r\n\r\n\r\n        return (\r\n            <div>\r\n            <form onSubmit={this.addProject}>\r\n                <input\r\n                    type='text'\r\n                    placeholder='name of project'\r\n                    name='title'\r\n                    onChange={this.updateInput}\r\n                    value={title}\r\n                />\r\n                <input\r\n                    type='text'\r\n                    placeholder='project description'\r\n                    name='desc'\r\n                    onChange={this.updateInput}\r\n                    value={desc}\r\n                />\r\n                <input\r\n                    type='text'\r\n                    placeholder='project priority (1-5)'\r\n                    name='priority'\r\n                    onChange={this.updateInput}\r\n                    value={priority}\r\n                />\r\n              \r\n\r\n              {\" \"}\r\n              <IconButton m={2} p={2} arias-label=\"Search database\" icon={<AddIcon />} type=\"submit\"/>\r\n            </form>\r\n            </div>\r\n          );\r\n        }   \r\n}\r\n\r\nfunction Preview({ title, desc, progress, priority, dataArray, setDataArray }) {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const onClose = () => setIsOpen(false);\r\n  const cancelRef = React.useRef();\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        <IconButton aria-label=\"Search database\" icon={<EditIcon />} m={2} />\r\n        <IconButton\r\n          aria-label=\"Search database\"\r\n          icon={<DeleteIcon />}\r\n          m={2}\r\n          onClick={() => setIsOpen(true)}\r\n        />\r\n        <AlertDialog\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={onClose}\r\n        >\r\n          <AlertDialogOverlay>\r\n            <AlertDialogContent>\r\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                Delete Project\r\n              </AlertDialogHeader>\r\n\r\n              <AlertDialogBody>\r\n                Are you sure? You can't undo this action afterwards.\r\n              </AlertDialogBody>\r\n\r\n              <AlertDialogFooter>\r\n                <Button ref={cancelRef} onClick={onClose}>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  colorScheme=\"red\"\r\n                  onClick={() => {\r\n                    const filteredPeople = dataArray.filter(\r\n                      (item) => item.title !== title\r\n                    );\r\n\r\n\r\n                    setDataArray(filteredPeople);\r\n                    //TODO: \r\n                    //Find how to get selected item name\r\n                    //DeleteProject(project name);\r\n\r\n                    onClose();\r\n                  }}\r\n                  ml={3}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </AlertDialogFooter>\r\n            </AlertDialogContent>\r\n          </AlertDialogOverlay>\r\n        </AlertDialog>\r\n        <Heading>{title}</Heading>\r\n        <Text>{desc}</Text>\r\n      </Box>\r\n      <Box>\r\n        {\" \"}\r\n        <Progress colorScheme={\"green\"} height=\"32px\" value={progress} />\r\n      </Box>\r\n      {Array(5)\r\n        .fill(\"\")\r\n        .map((_, i) => (\r\n          <StarIcon key={i} color={i < priority ? \"teal.500\" : \"gray.300\"} />\r\n        ))}\r\n    </Container>\r\n  );\r\n\r\n        \r\n  function DeleteProject(name) {\r\n    const del = () => {\r\n        const response = firestore.collection('projects');\r\n        const data =  response.where('title', '==', name);\r\n        data.get().then(function(querySnapshot) {\r\n          querySnapshot.forEach(function(doc) {\r\n            doc.ref.delete();\r\n          });\r\n        });\r\n    }\r\n    del();\r\n}\r\n\r\n\r\n}","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\Data.js",[],"C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\NotificationBar.js",["99","100"],"import {\r\n    Popover,\r\n    PopoverTrigger,\r\n    PopoverContent,\r\n    PopoverHeader,\r\n    PopoverBody,\r\n    PopoverFooter,\r\n    PopoverArrow,\r\n    PopoverCloseButton,\r\n    LinkOverlay,\r\n    Box,\r\n    IconButton,\r\n  } from \"@chakra-ui/react\";\r\n  import { VStack, StackDivider } from \"@chakra-ui/react\";\r\n  import { BellIcon } from \"@chakra-ui/icons\";\r\n  \r\n  export default () => {\r\n    return (\r\n      <Popover>\r\n        <PopoverTrigger>\r\n          <IconButton aria-label=\"Search database\" icon={<BellIcon />} m={2} />\r\n        </PopoverTrigger>\r\n        <PopoverContent>\r\n          <PopoverArrow />\r\n          <PopoverCloseButton />\r\n          <PopoverHeader>Notifications</PopoverHeader>\r\n          <PopoverBody>\r\n            <VStack\r\n              divider={<StackDivider borderColor=\"gray.200\" />}\r\n              spacing={4}\r\n              align=\"stretch\"\r\n            >\r\n              <LinkOverlay href=\"#\">\r\n                <Box> 1adfasfsfseff</Box>\r\n              </LinkOverlay>\r\n              <Box>2</Box>\r\n              <Box>3</Box>\r\n            </VStack>\r\n          </PopoverBody>\r\n        </PopoverContent>\r\n      </Popover>\r\n    );\r\n  };","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\Drawer.js",["101","102","103","104"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport {\r\n  useDisclosure,\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerBody,\r\n  IconButton,\r\n  Box,\r\n  VStack,\r\n  StackDivider,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\r\n\r\nexport default () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const handleClick = () => {\r\n    onOpen();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => handleClick()}\r\n        aria-label=\"Search database\"\r\n        icon={<HamburgerIcon />}\r\n      />\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen} size=\"xs\">\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <DrawerHeader>App</DrawerHeader>\r\n            <DrawerBody>\r\n              <VStack\r\n                divider={<StackDivider borderColor=\"gray.200\" />}\r\n                spacing={4}\r\n                align=\"stretch\"\r\n              >\r\n                <Box>\r\n                  <Link to=\"/\" onClick={onClose}>\r\n                    Homepage\r\n                  </Link>\r\n                </Box>\r\n                <Box>\r\n                  <Link to=\"/projects\" onClick={onClose}>\r\n                    Projects\r\n                  </Link>\r\n                </Box>\r\n                <Box>\r\n                  <Link to=\"/incentives\" onClick={onClose}>\r\n                    Incentives\r\n                  </Link>\r\n                </Box>\r\n              </VStack>\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\PomSession.js",["105","106","107"],"import React from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  Container,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default function PomSession(props) {\r\n  let [playing, setPlaying] = React.useState(false);\r\n  let [data, setData] = React.useState([25, 5, 30, 4]);\r\n  let [key, setKey] = React.useState([25, 5, 30, 4]);\r\n  console.log(data[0]);\r\n  console.log(props);\r\n  return (\r\n    <Container>\r\n      <Heading>{props.lol}</Heading> <br />\r\n      <CountdownCircleTimer\r\n        isPlaying={playing}\r\n        duration={data[0] * 60}\r\n        key={data[0] * 60}\r\n        colors={[\r\n          [\"#004777\", 0.33],\r\n          [\"#F7B801\", 0.33],\r\n          [\"#A30000\", 0.33],\r\n        ]}\r\n        onComplete={() => {\r\n          return [true, data[1] * 60 * 1000];\r\n        }}\r\n      >\r\n        {({ remainingTime }) => {\r\n          if (remainingTime >= 60) {\r\n            return (\r\n              <Text>\r\n                {Math.round(remainingTime / 60)} <br />\r\n                {Math.round(remainingTime / 60) == 1 ? \"Minute\" : \"Minutes\"}\r\n              </Text>\r\n            );\r\n          } else {\r\n            return (\r\n              <Text>\r\n                {remainingTime} <br />\r\n                Seconds{\" \"}\r\n              </Text>\r\n            );\r\n          }\r\n        }}\r\n      </CountdownCircleTimer>\r\n      <FormControl>\r\n        <FormLabel>Work (mins)</FormLabel>\r\n        <NumberInput\r\n          value={data[0]}\r\n          onChange={(e) => {\r\n            let arr = [...data];\r\n            arr[0] = e;\r\n            setData(arr);\r\n          }}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <FormLabel>Short Break (mins)</FormLabel>\r\n        <NumberInput\r\n          defaultValue={5}\r\n          onChange={(e) => {\r\n            let arr = [...data];\r\n            arr[1] = e;\r\n            setData(arr);\r\n          }}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <FormLabel>Long Break (mins)</FormLabel>\r\n        <NumberInput\r\n          defaultValue={30}\r\n          onChange={(e) => {\r\n            let arr = [...data];\r\n            arr[2] = e;\r\n\r\n            setData(arr);\r\n          }}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <FormLabel>Long Break Interval</FormLabel>\r\n        <NumberInput\r\n          defaultValue={2}\r\n          onChange={(e) => {\r\n            let arr = [...data];\r\n            arr[3] = e;\r\n\r\n            setData(arr);\r\n          }}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <Box p={2} m={2}>\r\n          {\" \"}\r\n          <Button\r\n            colorScheme=\"blue\"\r\n            m={2}\r\n            onClick={() => {\r\n              setPlaying(!playing);\r\n            }}\r\n          >\r\n            {playing ? \"Pause\" : \"Start\"}\r\n          </Button>\r\n          <Button colorScheme=\"red\" m={2} onClick={() => {}}>\r\n            Stop\r\n          </Button>\r\n        </Box>\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n}","C:\\Users\\lucml\\Desktop\\hackathon\\hackathon\\client\\src\\components\\Login.js",["108","109","110","111","112","113","114","115","116","117","118","119"],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":234,"column":50,"nodeType":"126","messageId":"127","endLine":234,"endColumn":54},{"ruleId":"124","severity":1,"message":"128","line":239,"column":8,"nodeType":"126","messageId":"127","endLine":239,"endColumn":14},{"ruleId":"124","severity":1,"message":"129","line":241,"column":8,"nodeType":"126","messageId":"127","endLine":241,"endColumn":16},{"ruleId":"124","severity":1,"message":"130","line":246,"column":8,"nodeType":"126","messageId":"127","endLine":246,"endColumn":24},{"ruleId":"120","replacedBy":"131"},{"ruleId":"122","replacedBy":"132"},{"ruleId":"124","severity":1,"message":"133","line":19,"column":10,"nodeType":"126","messageId":"127","endLine":19,"endColumn":19},{"ruleId":"124","severity":1,"message":"134","line":29,"column":5,"nodeType":"126","messageId":"127","endLine":29,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":37,"column":1,"nodeType":"137","endLine":80,"endColumn":3},{"ruleId":"124","severity":1,"message":"138","line":122,"column":25,"nodeType":"126","messageId":"127","endLine":122,"endColumn":29},{"ruleId":"124","severity":1,"message":"139","line":146,"column":10,"nodeType":"126","messageId":"127","endLine":146,"endColumn":25},{"ruleId":"140","severity":1,"message":"141","line":201,"column":13,"nodeType":"142","endLine":201,"endColumn":23},{"ruleId":"124","severity":1,"message":"143","line":204,"column":25,"nodeType":"126","messageId":"127","endLine":204,"endColumn":28},{"ruleId":"135","severity":1,"message":"136","line":13,"column":3,"nodeType":"137","endLine":43,"endColumn":5},{"ruleId":"135","severity":1,"message":"136","line":20,"column":1,"nodeType":"137","endLine":49,"endColumn":3},{"ruleId":"124","severity":1,"message":"144","line":51,"column":14,"nodeType":"126","messageId":"127","endLine":51,"endColumn":21},{"ruleId":"124","severity":1,"message":"134","line":29,"column":5,"nodeType":"126","messageId":"127","endLine":29,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":38,"column":9,"nodeType":"126","messageId":"147","endLine":38,"endColumn":11},{"ruleId":"124","severity":1,"message":"148","line":38,"column":9,"nodeType":"126","messageId":"127","endLine":38,"endColumn":11},{"ruleId":"124","severity":1,"message":"144","line":53,"column":14,"nodeType":"126","messageId":"127","endLine":53,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":84,"column":1,"nodeType":"137","endLine":137,"endColumn":3},{"ruleId":"140","severity":1,"message":"141","line":170,"column":13,"nodeType":"142","endLine":170,"endColumn":23},{"ruleId":"124","severity":1,"message":"149","line":173,"column":26,"nodeType":"126","messageId":"127","endLine":173,"endColumn":34},{"ruleId":"124","severity":1,"message":"143","line":173,"column":46,"nodeType":"126","messageId":"127","endLine":173,"endColumn":49},{"ruleId":"124","severity":1,"message":"150","line":283,"column":12,"nodeType":"126","messageId":"127","endLine":283,"endColumn":25},{"ruleId":"124","severity":1,"message":"151","line":7,"column":5,"nodeType":"126","messageId":"127","endLine":7,"endColumn":18},{"ruleId":"135","severity":1,"message":"136","line":17,"column":3,"nodeType":"137","endLine":43,"endColumn":5},{"ruleId":"124","severity":1,"message":"152","line":2,"column":27,"nodeType":"126","messageId":"127","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"153","line":2,"column":35,"nodeType":"126","messageId":"127","endLine":2,"endColumn":41},{"ruleId":"124","severity":1,"message":"154","line":2,"column":43,"nodeType":"126","messageId":"127","endLine":2,"endColumn":48},{"ruleId":"135","severity":1,"message":"136","line":18,"column":1,"nodeType":"137","endLine":65,"endColumn":3},{"ruleId":"124","severity":1,"message":"155","line":21,"column":8,"nodeType":"126","messageId":"127","endLine":21,"endColumn":11},{"ruleId":"124","severity":1,"message":"156","line":21,"column":13,"nodeType":"126","messageId":"127","endLine":21,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":45,"column":49,"nodeType":"159","messageId":"160","endLine":45,"endColumn":51},{"ruleId":"124","severity":1,"message":"161","line":1,"column":16,"nodeType":"126","messageId":"127","endLine":1,"endColumn":24},{"ruleId":"124","severity":1,"message":"162","line":1,"column":26,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"163","line":2,"column":9,"nodeType":"126","messageId":"127","endLine":2,"endColumn":20},{"ruleId":"124","severity":1,"message":"152","line":7,"column":27,"nodeType":"126","messageId":"127","endLine":7,"endColumn":33},{"ruleId":"124","severity":1,"message":"153","line":7,"column":35,"nodeType":"126","messageId":"127","endLine":7,"endColumn":41},{"ruleId":"124","severity":1,"message":"154","line":7,"column":43,"nodeType":"126","messageId":"127","endLine":7,"endColumn":48},{"ruleId":"124","severity":1,"message":"125","line":7,"column":50,"nodeType":"126","messageId":"127","endLine":7,"endColumn":54},{"ruleId":"140","severity":1,"message":"141","line":42,"column":13,"nodeType":"142","endLine":42,"endColumn":23},{"ruleId":"124","severity":1,"message":"164","line":44,"column":19,"nodeType":"126","messageId":"127","endLine":44,"endColumn":24},{"ruleId":"124","severity":1,"message":"165","line":44,"column":26,"nodeType":"126","messageId":"127","endLine":44,"endColumn":30},{"ruleId":"124","severity":1,"message":"166","line":44,"column":32,"nodeType":"126","messageId":"127","endLine":44,"endColumn":40},{"ruleId":"124","severity":1,"message":"167","line":47,"column":13,"nodeType":"126","messageId":"127","endLine":47,"endColumn":20},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'config' is defined but never used.","'firebase' is defined but never used.","'withFirebaseAuth' is defined but never used.",["168"],["169"],"'incentive' is defined but never used.","'firebaseApp' is assigned a value but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'name' is defined but never used.","'DeleteIncentive' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'uid' is assigned a value but never used.","'setPrev' is assigned a value but never used.","no-redeclare","'id' is already defined.","redeclared","'id' is assigned a value but never used.","'progress' is assigned a value but never used.","'DeleteProject' is defined but never used.","'PopoverFooter' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'key' is assigned a value but never used.","'setKey' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useContext' is defined but never used.","'AuthContext' is defined but never used.","'title' is assigned a value but never used.","'desc' is assigned a value but never used.","'priority' is assigned a value but never used.","'signOut' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]