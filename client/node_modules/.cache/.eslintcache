[{"C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\index.js":"1","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\App.js":"2","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\NavBar.js":"3","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\Drawer.js":"4","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\Timeline.js":"5","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\PomSession.js":"6","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\NotificationBar.js":"7","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\Incentives.js":"8","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\Projects.js":"9","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\Data.js":"10","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\theme.js":"11","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\index.js":"12","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\theme.js":"13","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\App.js":"14","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Incentives.js":"15","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Calendar.js":"16","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Projects.js":"17","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\NavBar.js":"18","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Timeline.js":"19","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\Data.js":"20","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Drawer.js":"21","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\NotificationBar.js":"22","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\PomSession.js":"23","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Destress.js":"24","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\StickyNotes.js":"25"},{"size":315,"mtime":1613312517557,"results":"26","hashOfConfig":"27"},{"size":1150,"mtime":1613312676030,"results":"28","hashOfConfig":"27"},{"size":1426,"mtime":1613312846211,"results":"29","hashOfConfig":"27"},{"size":1646,"mtime":1613273508934,"results":"30","hashOfConfig":"27"},{"size":2906,"mtime":1613302181976,"results":"31","hashOfConfig":"27"},{"size":3868,"mtime":1613310442970,"results":"32","hashOfConfig":"27"},{"size":1065,"mtime":1613273629060,"results":"33","hashOfConfig":"27"},{"size":4924,"mtime":1613313007254,"results":"34","hashOfConfig":"27"},{"size":8905,"mtime":1613299815212,"results":"35","hashOfConfig":"27"},{"size":1820,"mtime":1613301827078,"results":"36","hashOfConfig":"27"},{"size":302,"mtime":1613312504062,"results":"37","hashOfConfig":"27"},{"size":315,"mtime":1613312517557,"results":"38","hashOfConfig":"39"},{"size":302,"mtime":1613312504062,"results":"40","hashOfConfig":"39"},{"size":1528,"mtime":1613316888663,"results":"41","hashOfConfig":"39"},{"size":4924,"mtime":1613313007254,"results":"42","hashOfConfig":"39"},{"size":557,"mtime":1613315462584,"results":"43","hashOfConfig":"39"},{"size":8905,"mtime":1613299815212,"results":"44","hashOfConfig":"39"},{"size":1426,"mtime":1613312846211,"results":"45","hashOfConfig":"39"},{"size":2906,"mtime":1613302181976,"results":"46","hashOfConfig":"39"},{"size":1820,"mtime":1613301827078,"results":"47","hashOfConfig":"39"},{"size":2138,"mtime":1613316940633,"results":"48","hashOfConfig":"39"},{"size":1065,"mtime":1613273629060,"results":"49","hashOfConfig":"39"},{"size":3868,"mtime":1613310442970,"results":"50","hashOfConfig":"39"},{"size":26652,"mtime":1613316792410,"results":"51","hashOfConfig":"39"},{"size":328,"mtime":1613316857597,"results":"52","hashOfConfig":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"54dojk",{"filePath":"55","messages":"56","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ilp87j",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\index.js",[],"C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\App.js",["111","112","113"],"C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\NavBar.js",["114","115","116"],"C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\Drawer.js",["117","118","119","120"],"import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport {\r\n  useDisclosure,\r\n  Drawer,\r\n  DrawerOverlay,\r\n  DrawerContent,\r\n  DrawerHeader,\r\n  DrawerBody,\r\n  IconButton,\r\n  Box,\r\n  VStack,\r\n  StackDivider,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { HamburgerIcon } from \"@chakra-ui/icons\";\r\n\r\nexport default () => {\r\n  const { isOpen, onOpen, onClose } = useDisclosure();\r\n\r\n  const handleClick = () => {\r\n    onOpen();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <IconButton\r\n        onClick={() => handleClick()}\r\n        aria-label=\"Search database\"\r\n        icon={<HamburgerIcon />}\r\n      />\r\n\r\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen} size=\"xs\">\r\n        <DrawerOverlay>\r\n          <DrawerContent>\r\n            <DrawerHeader>App</DrawerHeader>\r\n            <DrawerBody>\r\n              <VStack\r\n                divider={<StackDivider borderColor=\"gray.200\" />}\r\n                spacing={4}\r\n                align=\"stretch\"\r\n              >\r\n                <Box>\r\n                  <Link to=\"/\" onClick={onClose}>\r\n                    Homepage\r\n                  </Link>\r\n                </Box>\r\n                <Box>\r\n                  <Link to=\"/projects\" onClick={onClose}>\r\n                    Projects\r\n                  </Link>\r\n                </Box>\r\n                <Box>\r\n                  <Link to=\"/incentives\" onClick={onClose}>\r\n                    Incentives\r\n                  </Link>\r\n                </Box>\r\n              </VStack>\r\n            </DrawerBody>\r\n          </DrawerContent>\r\n        </DrawerOverlay>\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n",["121","122"],"C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\Timeline.js",["123","124","125"],"import React from \"react\";\r\n\r\nimport { Grid, Heading } from \"@chakra-ui/react\";\r\n\r\nimport {\r\n  Box,\r\n  Stat,\r\n  StatLabel,\r\n  StatNumber,\r\n  StatHelpText,\r\n  HStack,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\n\r\nimport { StarIcon } from \"@chakra-ui/icons\";\r\n\r\nimport Data from \"../Data\";\r\nimport PomSession from \"./PomSession\";\r\n\r\nexport default () => {\r\n  let [data, setData] = React.useState(Data);\r\n  let [preview, setPreview] = React.useState(false);\r\n  let [previewTag, setPreviewTag] = React.useState(null);\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <Heading size=\"sm\" fontSize=\"50px\" m={2} p={2}>\r\n        Timeline\r\n      </Heading>{\" \"}\r\n      <br />\r\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={700} m={2} p={2}>\r\n        <Grid templateColumns=\"repeat(1, 1fr)\" gap={4} m={2} p={2}>\r\n          {data.map((item) => {\r\n            return (\r\n              <PomPrompt\r\n                title={item.title}\r\n                desc={item.desc}\r\n                progress={item.progress}\r\n                priority={item.priority}\r\n                pomodoroTimeDone={item.pomodoroTimeDone}\r\n                pomodoroSessionsDone={item.pomodoroSessionsDone}\r\n                setPreview={setPreview}\r\n                setPreviewTag={setPreviewTag}\r\n              />\r\n            );\r\n          })}\r\n        </Grid>\r\n        {preview ? previewTag : null}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\nfunction PomPrompt(props) {\r\n  let [prev, setPrev] = React.useState(true);\r\n  const handleClick = () => {\r\n    props.setPreviewTag(<PomSession lol={props.title} />);\r\n    props.setPreview(prev);\r\n  };\r\n  return (\r\n    <>\r\n      <Box\r\n        w=\"300px\"\r\n        border=\"1px\"\r\n        borderColor=\"gray.200\"\r\n        borderRadius=\"lg\"\r\n        p={2}\r\n        onClick={handleClick}\r\n      >\r\n        <Box>\r\n          <Text fontSize=\"2xl\">{props.title}</Text>\r\n          <Box>\r\n            {Array(5)\r\n              .fill(\"\")\r\n              .map((_, i) => (\r\n                <StarIcon\r\n                  key={i}\r\n                  color={i < props.priority ? \"teal.500\" : \"gray.300\"}\r\n                />\r\n              ))}{\" \"}\r\n          </Box>\r\n        </Box>{\" \"}\r\n        <HStack spacing={20}>\r\n          <Box>\r\n            {\" \"}\r\n            <Stat>\r\n              {\" \"}\r\n              <HStack spacing={20}>\r\n                <Box>\r\n                  <StatLabel>Hours Done</StatLabel>\r\n                  <StatNumber>{props.pomodoroTimeDone} Hours</StatNumber>{\" \"}\r\n                </Box>{\" \"}\r\n                <Box>\r\n                  <StatLabel>Sessions Done</StatLabel>\r\n                  <StatNumber>\r\n                    {props.pomodoroSessionsDone} Sessions{\" \"}\r\n                  </StatNumber>{\" \"}\r\n                </Box>{\" \"}\r\n              </HStack>{\" \"}\r\n              <StatHelpText>Feb 12 - Feb 28</StatHelpText>\r\n            </Stat>\r\n          </Box>{\" \"}\r\n        </HStack>{\" \"}\r\n      </Box>{\" \"}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\PomSession.js",["126"],"import React from \"react\";\r\nimport { CountdownCircleTimer } from \"react-countdown-circle-timer\";\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  Box,\r\n  Heading,\r\n  Text,\r\n  Button,\r\n  Container,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberInputStepper,\r\n  NumberIncrementStepper,\r\n  NumberDecrementStepper,\r\n} from \"@chakra-ui/react\";\r\n\r\nexport default function PomSession(props) {\r\n  let [playing, setPlaying] = React.useState(false);\r\n  let [rest, setRest] = React.useState(false);\r\n  let [data, setData] = React.useState([25, 5, 30, 4]);\r\n\r\n  return (\r\n    <Container>\r\n      <Heading>{props.lol}</Heading> <br />\r\n      <CountdownCircleTimer\r\n        isPlaying={data[3] > 0 && playing}\r\n        duration={rest ? data[1] * 60 : data[0] * 60}\r\n        key={rest ? data[1] * 60 : data[0] * 60}\r\n        colors={[\r\n          [\"#004777\", 0.33],\r\n          [\"#F7B801\", 0.33],\r\n          [\"#A30000\", 0.33],\r\n        ]}\r\n        onComplete={() => {\r\n          setRest(!rest);\r\n          if (!rest) {\r\n            setData(data[3] - 1);\r\n          }\r\n        }}\r\n      >\r\n        {({ remainingTime }) => {\r\n          if (remainingTime >= 60) {\r\n            return (\r\n              <Text>\r\n                {rest ? \"Rest Time!\" : null} <br />\r\n                {Math.round(remainingTime / 60)} <br />\r\n                {Math.round(remainingTime / 60) == 1 ? \"Minute\" : \"Minutes\"}\r\n              </Text>\r\n            );\r\n          } else {\r\n            return (\r\n              <Text>\r\n                {remainingTime} <br />\r\n                Seconds{\" \"}\r\n              </Text>\r\n            );\r\n          }\r\n        }}\r\n      </CountdownCircleTimer>\r\n      <FormControl>\r\n        <FormLabel>Work (mins)</FormLabel>\r\n        <NumberInput\r\n          value={data[0]}\r\n          onChange={(e) => {\r\n            let arr = [...data];\r\n            arr[0] = e;\r\n            setData(arr);\r\n          }}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <FormLabel>Short Break (mins)</FormLabel>\r\n        <NumberInput\r\n          defaultValue={5}\r\n          onChange={(e) => {\r\n            let arr = [...data];\r\n            arr[1] = e;\r\n            setData(arr);\r\n          }}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <FormLabel>Long Break (mins)</FormLabel>\r\n        <NumberInput\r\n          defaultValue={30}\r\n          onChange={(e) => {\r\n            let arr = [...data];\r\n            arr[2] = e;\r\n\r\n            setData(arr);\r\n          }}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <FormLabel>Long Break Interval</FormLabel>\r\n        <NumberInput\r\n          defaultValue={2}\r\n          onChange={(e) => {\r\n            let arr = [...data];\r\n            arr[3] = e;\r\n\r\n            setData(arr);\r\n          }}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n        <Box p={2} m={2}>\r\n          {\" \"}\r\n          <Button\r\n            colorScheme=\"blue\"\r\n            m={2}\r\n            onClick={() => {\r\n              setPlaying(!playing);\r\n            }}\r\n          >\r\n            {playing ? \"Pause\" : \"Start\"}\r\n          </Button>\r\n          <Button colorScheme=\"red\" m={2} onClick={() => {}}>\r\n            Stop\r\n          </Button>\r\n        </Box>\r\n      </FormControl>\r\n    </Container>\r\n  );\r\n}\r\n","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\NotificationBar.js",["127","128"],"import {\r\n  Popover,\r\n  PopoverTrigger,\r\n  PopoverContent,\r\n  PopoverHeader,\r\n  PopoverBody,\r\n  PopoverFooter,\r\n  PopoverArrow,\r\n  PopoverCloseButton,\r\n  LinkOverlay,\r\n  Box,\r\n  IconButton,\r\n} from \"@chakra-ui/react\";\r\nimport { VStack, StackDivider } from \"@chakra-ui/react\";\r\nimport { BellIcon } from \"@chakra-ui/icons\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Popover>\r\n      <PopoverTrigger>\r\n        <IconButton aria-label=\"Search database\" icon={<BellIcon />} m={2} />\r\n      </PopoverTrigger>\r\n      <PopoverContent>\r\n        <PopoverArrow />\r\n        <PopoverCloseButton />\r\n        <PopoverHeader>Notifications</PopoverHeader>\r\n        <PopoverBody>\r\n          <VStack\r\n            divider={<StackDivider borderColor=\"gray.200\" />}\r\n            spacing={4}\r\n            align=\"stretch\"\r\n          >\r\n            <LinkOverlay href=\"#\">\r\n              <Box> 1adfasfsfseff</Box>\r\n            </LinkOverlay>\r\n            <Box>2</Box>\r\n            <Box>3</Box>\r\n          </VStack>\r\n        </PopoverBody>\r\n      </PopoverContent>\r\n    </Popover>\r\n  );\r\n};\r\n","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\Incentives.js",["129","130"],"C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\components\\Projects.js",["131","132"],"import React from \"react\";\r\nimport {\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  Box,\r\n  Heading,\r\n  IconButton,\r\n  Text,\r\n  Progress,\r\n  Container,\r\n  Spacer,\r\n  Button,\r\n  Grid,\r\n  NumberInput,\r\n  NumberInputField,\r\n  NumberDecrementStepper,\r\n  NumberIncrementStepper,\r\n  NumberInputStepper,\r\n  Input,\r\n  Stack,\r\n  Checkbox,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  DeleteIcon,\r\n  EditIcon,\r\n  StarIcon,\r\n  CheckIcon,\r\n  CloseIcon,\r\n  AddIcon,\r\n} from \"@chakra-ui/icons\";\r\n\r\nimport Data from \"../Data\";\r\n\r\nfunction Project({\r\n  title,\r\n  desc,\r\n  progress,\r\n  priority,\r\n  index,\r\n  setPreview,\r\n  setPreviewTag,\r\n  dataArray,\r\n  setDataArray,\r\n  ...rest\r\n}) {\r\n  let [prev, setPrev] = React.useState(true);\r\n\r\n  const handleClick = () => {\r\n    setPreviewTag(\r\n      <Preview\r\n        index={index}\r\n        dataArray={dataArray}\r\n        setDataArray={setDataArray}\r\n        setPreviewTag={setPreviewTag}\r\n      />\r\n    );\r\n    setPreview(prev);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box onClick={handleClick} p={5} shadow=\"md\" borderWidth=\"1px\" {...rest}>\r\n        <Heading fontSize=\"xl\">\r\n          {title} <Spacer />{\" \"}\r\n        </Heading>\r\n\r\n        <Text mt={4}>{desc}</Text>\r\n        <br />\r\n        <Progress colorScheme={\"green\"} height=\"32px\" value={progress} />\r\n      </Box>{\" \"}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default () => {\r\n  let [dataArray, setDataArray] = React.useState(Data);\r\n  let [preview, setPreview] = React.useState(false);\r\n  let [previewTag, setPreviewTag] = React.useState(null);\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <AddButton dataArray={dataArray} setDataArray={setDataArray} />\r\n      <Grid templateColumns=\"repeat(2, 1fr)\" gap={4}>\r\n        {\" \"}\r\n        <Container>\r\n          {\" \"}\r\n          {dataArray.map((item, i) => {\r\n            return (\r\n              <Project\r\n                title={dataArray[i].title}\r\n                desc={dataArray[i].desc}\r\n                progress={dataArray[i].progress}\r\n                priority={dataArray[i].priority}\r\n                index={i}\r\n                setPreview={setPreview}\r\n                setPreviewTag={setPreviewTag}\r\n                dataArray={dataArray}\r\n                setDataArray={setDataArray}\r\n              />\r\n            );\r\n          })}\r\n        </Container>\r\n        <Container> {preview ? previewTag : null} </Container>\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction Preview({ index, dataArray, setDataArray, setPreviewTag }) {\r\n  const [isEditable, setIsEditable] = React.useState(false);\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const onClose = () => setIsOpen(false);\r\n  const cancelRef = React.useRef();\r\n  return (\r\n    <Container>\r\n      <Box>\r\n        {isEditable ? (\r\n          <>\r\n            {\" \"}\r\n            <IconButton\r\n              aria-label=\"Search database\"\r\n              icon={<CheckIcon />}\r\n              m={2}\r\n              onClick={() => {\r\n                setIsEditable(false);\r\n              }}\r\n            />\r\n            <IconButton\r\n              aria-label=\"Search database\"\r\n              icon={<CloseIcon />}\r\n              m={2}\r\n              onClick={() => setIsEditable(false)}\r\n            />{\" \"}\r\n          </>\r\n        ) : (\r\n          <IconButton\r\n            aria-label=\"Search database\"\r\n            icon={<EditIcon />}\r\n            m={2}\r\n            onClick={() => setIsEditable(true)}\r\n          />\r\n        )}\r\n        <IconButton\r\n          aria-label=\"Search database\"\r\n          icon={<DeleteIcon />}\r\n          m={2}\r\n          onClick={() => setIsOpen(true)}\r\n        />\r\n        <AlertDialog\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={onClose}\r\n        >\r\n          <AlertDialogOverlay>\r\n            <AlertDialogContent>\r\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                Delete Project\r\n              </AlertDialogHeader>\r\n\r\n              <AlertDialogBody>\r\n                Are you sure? You can't undo this action afterwards.\r\n              </AlertDialogBody>\r\n\r\n              <AlertDialogFooter>\r\n                <Button ref={cancelRef} onClick={onClose}>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  colorScheme=\"red\"\r\n                  onClick={() => {\r\n                    const filteredPeople = dataArray.filter(\r\n                      (item) => item.title !== dataArray[index].title\r\n                    );\r\n                    setDataArray(filteredPeople);\r\n                    setPreviewTag(null);\r\n                    onClose();\r\n                  }}\r\n                  ml={3}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </AlertDialogFooter>\r\n            </AlertDialogContent>\r\n          </AlertDialogOverlay>\r\n        </AlertDialog>\r\n        {isEditable ? (\r\n          <Input\r\n            variant=\"outline\"\r\n            defaultValue={dataArray[index].title}\r\n            onChange={(e) => {\r\n              let arr = [...dataArray];\r\n              arr[index].title = e.target.value;\r\n              setDataArray(arr);\r\n            }}\r\n          />\r\n        ) : (\r\n          <Heading as=\"h2\" size=\"xl\">\r\n            {dataArray[index].title}\r\n          </Heading>\r\n        )}{\" \"}\r\n        {isEditable ? (\r\n          <Input\r\n            variant=\"outline\"\r\n            defaultValue={dataArray[index].desc}\r\n            onChange={(e) => {\r\n              let arr = [...dataArray];\r\n              arr[index].desc = e.target.value;\r\n              setDataArray(arr);\r\n            }}\r\n          />\r\n        ) : (\r\n          <Text> {dataArray[index].desc}</Text>\r\n        )}{\" \"}\r\n      </Box>\r\n      <Box>\r\n        {\" \"}\r\n        <Progress\r\n          colorScheme={\"green\"}\r\n          height=\"32px\"\r\n          value={dataArray[index].progress}\r\n        />\r\n      </Box>\r\n      {Array(5)\r\n        .fill(\"\")\r\n        .map((_, i) => (\r\n          <StarIcon\r\n            key={i}\r\n            color={i < dataArray[index].priority ? \"teal.500\" : \"gray.300\"}\r\n          />\r\n        ))}\r\n      {isEditable ? (\r\n        <NumberInput\r\n          defaultValue={dataArray[index].priority}\r\n          min={0}\r\n          max={5}\r\n          onChange={(e) => {\r\n            let arr = [...dataArray];\r\n            arr[index].priority = e;\r\n            setDataArray(arr);\r\n          }}\r\n        >\r\n          <NumberInputField />\r\n          <NumberInputStepper>\r\n            <NumberIncrementStepper />\r\n            <NumberDecrementStepper />\r\n          </NumberInputStepper>\r\n        </NumberInput>\r\n      ) : null}\r\n\r\n      <Heading as=\"h3\" size=\"lg\">\r\n        To-do List\r\n      </Heading>\r\n\r\n      <Stack spacing={10} direction=\"column\">\r\n        {dataArray[index].tasks.map((item, i) => {\r\n          return (\r\n            <Checkbox\r\n              isDisabled={!isEditable}\r\n              key={i}\r\n              colorScheme=\"red\"\r\n              defaultChecked={false}\r\n              onChange={(e) => {\r\n                let arr = [...dataArray];\r\n                arr[index].tasks[i].taskStatus = e.target.checked;\r\n\r\n                setDataArray(arr);\r\n                console.log(dataArray);\r\n              }}\r\n            >\r\n              {item.task}\r\n            </Checkbox>\r\n          );\r\n        })}\r\n        <AddTask\r\n          isDisabled={!isEditable}\r\n          dataArray={dataArray}\r\n          setDataArray={setDataArray}\r\n          index={index}\r\n        />\r\n      </Stack>\r\n    </Container>\r\n  );\r\n}\r\nfunction AddButton({ setDataArray, dataArray }) {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <IconButton\r\n        m={2}\r\n        p={2}\r\n        aria-label=\"Search database\"\r\n        icon={<AddIcon />}\r\n        onClick={() => {\r\n          setDataArray([\r\n            ...dataArray,\r\n            {\r\n              title: \"Sample Exercise\",\r\n              desc: \"Sample description goes here\",\r\n              progress: 0,\r\n              priority: 3,\r\n              tasks: [\r\n                { task: \"Study chapter 1\", taskStatus: false },\r\n                { task: \"Study chapter 0\", taskStatus: false },\r\n                { task: \"Study chapter 9191\", taskStatus: false },\r\n                { task: \"Study chapter 121212\", taskStatus: false },\r\n              ],\r\n            },\r\n          ]);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\nfunction AddTask({ setDataArray, dataArray, isDisabled, index }) {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <IconButton\r\n        isDisabled={isDisabled}\r\n        m={2}\r\n        p={2}\r\n        aria-label=\"Search database\"\r\n        icon={<AddIcon />}\r\n        onClick={() => {\r\n          let arr = [...dataArray];\r\n          arr[index].tasks = [\r\n            ...arr[index].tasks,\r\n            { task: \"New Tasks\", taskStatus: false },\r\n          ];\r\n          setDataArray(arr);\r\n          console.log(dataArray);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\Data.js",[],"C:\\Users\\acer\\Desktop\\Hackathon\\samples\\src\\theme.js",[],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\index.js",[],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\theme.js",[],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\App.js",["133"],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Incentives.js",["134","135"],"import React from \"react\";\r\nimport {\r\n  SimpleGrid,\r\n  Box,\r\n  Progress,\r\n  Stack,\r\n  Heading,\r\n  Text,\r\n  IconButton,\r\n  Button,\r\n  AlertDialog,\r\n  AlertDialogBody,\r\n  AlertDialogFooter,\r\n  AlertDialogHeader,\r\n  AlertDialogContent,\r\n  AlertDialogOverlay,\r\n  Input,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  DeleteIcon,\r\n  AddIcon,\r\n  EditIcon,\r\n  CheckIcon,\r\n  CloseIcon,\r\n} from \"@chakra-ui/icons\";\r\n\r\nimport { incentive } from \"../Data\"; // data\r\n\r\nexport default () => {\r\n  let [incentives, setIncentives] = React.useState(incentive); // data in state\r\n  return (\r\n    <Box>\r\n      <SimpleGrid columns={2} spacing={10}>\r\n        <Box>\r\n          <Stack spacing={2}>\r\n            {incentives.map((item, i) => (\r\n              <IncentiveItem\r\n                incentives={incentives}\r\n                index={i}\r\n                setIncentives={setIncentives}\r\n              />\r\n            ))}\r\n          </Stack>\r\n          <AddButton incentives={incentives} setIncentives={setIncentives} />\r\n        </Box>\r\n      </SimpleGrid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nfunction IncentiveItem({ incentives, setIncentives, index, ...rest }) {\r\n  const [isEditable, setIsEditable] = React.useState(false);\r\n  const [changedIncentives, setChangedIncentives] = React.useState(incentives);\r\n  const handleEdit = () => {\r\n    setIncentives(changedIncentives);\r\n  };\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const onClose = () => setIsOpen(false);\r\n  const cancelRef = React.useRef();\r\n  return (\r\n    <Box p={5} shadow=\"md\" borderWidth=\"1px\" {...rest}>\r\n      <Heading fontSize=\"xl\">\r\n        {isEditable ? (\r\n          <Input\r\n            defaultValue={incentives[index].name}\r\n            onChange={(e) => {\r\n              let arr = [...changedIncentives];\r\n              changedIncentives[index].name = e.target.value;\r\n              setChangedIncentives(arr);\r\n            }}\r\n          />\r\n        ) : (\r\n          incentives[index].name\r\n        )}{\" \"}\r\n        {isEditable ? (\r\n          <>\r\n            {\" \"}\r\n            <IconButton\r\n              type=\"submit\"\r\n              aria-label=\"Search database\"\r\n              icon={<CheckIcon />}\r\n              m={2}\r\n              onClick={() => {\r\n                handleEdit();\r\n                setIsEditable(false);\r\n              }}\r\n            />\r\n            <IconButton\r\n              aria-label=\"Search database\"\r\n              icon={<CloseIcon />}\r\n              m={2}\r\n              onClick={() => setIsEditable(false)}\r\n            />{\" \"}\r\n          </>\r\n        ) : (\r\n          <IconButton\r\n            aria-label=\"Search database\"\r\n            icon={<EditIcon />}\r\n            m={2}\r\n            onClick={() => setIsEditable(true)}\r\n          />\r\n        )}\r\n        <IconButton\r\n          aria-label=\"Search database\"\r\n          icon={<DeleteIcon />}\r\n          m={2}\r\n          onClick={() => setIsOpen(true)}\r\n        />\r\n        <AlertDialog\r\n          isOpen={isOpen}\r\n          leastDestructiveRef={cancelRef}\r\n          onClose={onClose}\r\n        >\r\n          <AlertDialogOverlay>\r\n            <AlertDialogContent>\r\n              <AlertDialogHeader fontSize=\"lg\" fontWeight=\"bold\">\r\n                Delete Project\r\n              </AlertDialogHeader>\r\n\r\n              <AlertDialogBody>\r\n                Are you sure? You can't undo this action afterwards.\r\n              </AlertDialogBody>\r\n\r\n              <AlertDialogFooter>\r\n                <Button ref={cancelRef} onClick={onClose}>\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  colorScheme=\"red\"\r\n                  onClick={() => {\r\n                    const filteredPeople = incentives.filter(\r\n                      (item) => item.name !== incentives[index].name\r\n                    );\r\n                    setIncentives(filteredPeople);\r\n                    onClose();\r\n                  }}\r\n                  ml={3}\r\n                >\r\n                  Delete\r\n                </Button>\r\n              </AlertDialogFooter>\r\n            </AlertDialogContent>\r\n          </AlertDialogOverlay>\r\n        </AlertDialog>\r\n      </Heading>\r\n      {isEditable ? (\r\n        <Input\r\n          defaultValue={incentives[index].desc}\r\n          onChange={(e) => {\r\n            let arr = [...changedIncentives];\r\n            changedIncentives[index].desc = e.target.value;\r\n            setChangedIncentives(arr);\r\n          }}\r\n        />\r\n      ) : (\r\n        <Text mt={4}>{incentives[index].desc}</Text>\r\n      )}{\" \"}\r\n      <br />\r\n    </Box>\r\n  );\r\n}\r\n\r\nfunction AddButton(props) {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      <IconButton\r\n        m={2}\r\n        p={2}\r\n        aria-label=\"Search database\"\r\n        icon={<AddIcon />}\r\n        onClick={() => {\r\n          props.setIncentives([\r\n            ...props.incentives,\r\n            { name: \"Sample Incentive\", desc: \"Sample escription\" },\r\n          ]);\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Calendar.js",[],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Projects.js",["136","137"],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\NavBar.js",["138","139","140"],"import {\r\n  IconButton,\r\n  Flex,\r\n  Heading,\r\n  Spacer,\r\n  Box,\r\n  Input,\r\n  useColorMode,\r\n  Button,\r\n} from \"@chakra-ui/react\";\r\nimport {\r\n  SearchIcon,\r\n  EmailIcon,\r\n  SettingsIcon,\r\n  MoonIcon,\r\n  SunIcon,\r\n} from \"@chakra-ui/icons\";\r\nimport SearchField from \"react-search-field\";\r\n\r\nimport Data from \"../Data\";\r\nimport Drawer from \"./Drawer\";\r\nimport NotificationBar from \"./NotificationBar\";\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <Flex>\r\n        <Box p=\"2\">\r\n          <Drawer />\r\n        </Box>\r\n        <Box p=\"2\">\r\n          <Heading m={2} size=\"md\">\r\n            App\r\n          </Heading>\r\n        </Box>\r\n        <Spacer />\r\n        <Box>\r\n          {\" \"}\r\n          <Input placeholder=\"Basic usage\" size=\"md\" width=\"400px\" m={2} />{\" \"}\r\n        </Box>\r\n        <IconButton aria-label=\"Search database\" icon={<SearchIcon />} m={2} />{\" \"}\r\n        <Spacer />\r\n        <NotificationBar />\r\n        <IconButton aria-label=\"Search database\" icon={<EmailIcon />} m={2} />\r\n        <IconButton\r\n          aria-label=\"Search database\"\r\n          icon={<SettingsIcon />}\r\n          m={2}\r\n        />\r\n        <ToggleDark />\r\n      </Flex>\r\n      <Flex></Flex>\r\n    </>\r\n  );\r\n};\r\n\r\nfunction ToggleDark() {\r\n  const { colorMode, toggleColorMode } = useColorMode();\r\n  return (\r\n    <Button onClick={toggleColorMode} m={2}>\r\n      {colorMode === \"light\" ? <MoonIcon /> : <SunIcon />}\r\n    </Button>\r\n  );\r\n}\r\n","C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Timeline.js",["141","142","143"],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\Data.js",[],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Drawer.js",["144","145","146","147"],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\NotificationBar.js",["148","149"],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\PomSession.js",["150"],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\Destress.js",[],"C:\\Users\\acer\\Desktop\\Hackathon\\hackathon\\client\\src\\components\\StickyNotes.js",["151"],{"ruleId":"152","severity":1,"message":"153","line":5,"column":3,"nodeType":"154","messageId":"155","endLine":5,"endColumn":15},{"ruleId":"152","severity":1,"message":"156","line":6,"column":3,"nodeType":"154","messageId":"155","endLine":6,"endColumn":9},{"ruleId":"152","severity":1,"message":"157","line":8,"column":50,"nodeType":"154","messageId":"155","endLine":8,"endColumn":54},{"ruleId":"152","severity":1,"message":"158","line":18,"column":8,"nodeType":"154","messageId":"155","endLine":18,"endColumn":19},{"ruleId":"152","severity":1,"message":"159","line":20,"column":8,"nodeType":"154","messageId":"155","endLine":20,"endColumn":12},{"ruleId":"160","severity":1,"message":"161","line":23,"column":1,"nodeType":"162","endLine":54,"endColumn":3},{"ruleId":"152","severity":1,"message":"163","line":2,"column":27,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"164","line":2,"column":35,"nodeType":"154","messageId":"155","endLine":2,"endColumn":41},{"ruleId":"152","severity":1,"message":"165","line":2,"column":43,"nodeType":"154","messageId":"155","endLine":2,"endColumn":48},{"ruleId":"160","severity":1,"message":"161","line":18,"column":1,"nodeType":"162","endLine":65,"endColumn":3},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"160","severity":1,"message":"161","line":20,"column":1,"nodeType":"162","endLine":52,"endColumn":3},{"ruleId":"152","severity":1,"message":"170","line":21,"column":14,"nodeType":"154","messageId":"155","endLine":21,"endColumn":21},{"ruleId":"152","severity":1,"message":"171","line":54,"column":14,"nodeType":"154","messageId":"155","endLine":54,"endColumn":21},{"ruleId":"172","severity":1,"message":"173","line":48,"column":49,"nodeType":"174","messageId":"175","endLine":48,"endColumn":51},{"ruleId":"152","severity":1,"message":"176","line":7,"column":3,"nodeType":"154","messageId":"155","endLine":7,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":17,"column":1,"nodeType":"162","endLine":43,"endColumn":3},{"ruleId":"152","severity":1,"message":"177","line":5,"column":3,"nodeType":"154","messageId":"155","endLine":5,"endColumn":11},{"ruleId":"160","severity":1,"message":"161","line":29,"column":1,"nodeType":"162","endLine":49,"endColumn":3},{"ruleId":"152","severity":1,"message":"171","line":50,"column":14,"nodeType":"154","messageId":"155","endLine":50,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":79,"column":1,"nodeType":"162","endLine":111,"endColumn":3},{"ruleId":"152","severity":1,"message":"157","line":2,"column":50,"nodeType":"154","messageId":"155","endLine":2,"endColumn":54},{"ruleId":"152","severity":1,"message":"177","line":5,"column":3,"nodeType":"154","messageId":"155","endLine":5,"endColumn":11},{"ruleId":"160","severity":1,"message":"161","line":29,"column":1,"nodeType":"162","endLine":49,"endColumn":3},{"ruleId":"152","severity":1,"message":"171","line":50,"column":14,"nodeType":"154","messageId":"155","endLine":50,"endColumn":21},{"ruleId":"160","severity":1,"message":"161","line":79,"column":1,"nodeType":"162","endLine":111,"endColumn":3},{"ruleId":"152","severity":1,"message":"158","line":18,"column":8,"nodeType":"154","messageId":"155","endLine":18,"endColumn":19},{"ruleId":"152","severity":1,"message":"159","line":20,"column":8,"nodeType":"154","messageId":"155","endLine":20,"endColumn":12},{"ruleId":"160","severity":1,"message":"161","line":23,"column":1,"nodeType":"162","endLine":54,"endColumn":3},{"ruleId":"160","severity":1,"message":"161","line":20,"column":1,"nodeType":"162","endLine":52,"endColumn":3},{"ruleId":"152","severity":1,"message":"170","line":21,"column":14,"nodeType":"154","messageId":"155","endLine":21,"endColumn":21},{"ruleId":"152","severity":1,"message":"171","line":54,"column":14,"nodeType":"154","messageId":"155","endLine":54,"endColumn":21},{"ruleId":"152","severity":1,"message":"163","line":2,"column":27,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"164","line":2,"column":35,"nodeType":"154","messageId":"155","endLine":2,"endColumn":41},{"ruleId":"152","severity":1,"message":"165","line":2,"column":43,"nodeType":"154","messageId":"155","endLine":2,"endColumn":48},{"ruleId":"160","severity":1,"message":"161","line":18,"column":1,"nodeType":"162","endLine":80,"endColumn":3},{"ruleId":"152","severity":1,"message":"176","line":7,"column":3,"nodeType":"154","messageId":"155","endLine":7,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":17,"column":1,"nodeType":"162","endLine":43,"endColumn":3},{"ruleId":"172","severity":1,"message":"173","line":48,"column":49,"nodeType":"174","messageId":"175","endLine":48,"endColumn":51},{"ruleId":"178","severity":1,"message":"179","line":5,"column":5,"nodeType":"180","messageId":"181","endLine":7,"endColumn":6},"no-unused-vars","'useColorMode' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Link' is defined but never used.","'SearchField' is defined but never used.","'Data' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","no-native-reassign",["182"],"no-negated-in-lhs",["183"],"'setData' is assigned a value but never used.","'setPrev' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'PopoverFooter' is defined but never used.","'Progress' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]